# Nom du workflow qui apparaîtra dans l'onglet "Actions" de GitHub
name: Gitleaks Scan

# Déclencheurs du workflow
on:
  push:
    branches:
      - main # ou votre branche principale (ex: master)
  pull_request:
    branches:
      - main # ou votre branche principale

jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Cloner le dépôt
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 'fetch-depth: 0' est CRUCIAL pour que Gitleaks puisse analyser tout l'historique.
          fetch-depth: 0

      # Étape 2: Exécuter l'action Gitleaks et générer un rapport
      - name: Run Gitleaks Action
        id: gitleaks # Ajout d'un ID pour référencer cette étape plus tard
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Demande à Gitleaks de générer un rapport au format JSON
          report-format: json
          # Le nom du fichier de rapport qui sera créé
          report-name: gitleaks-report
        continue-on-error: true # La pipeline continue même si des fuites sont trouvées

      # Étape 3: Uploader le rapport Gitleaks en tant qu'artefact
      - name: Upload Gitleaks report
        if: always() # S'exécute toujours, même si l'étape précédente a échoué (utile sans continue-on-error)
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report # Le nom de l'artefact qui apparaîtra sur GitHub
          path: gitleaks-report.json # Le chemin vers le fichier à uploader

