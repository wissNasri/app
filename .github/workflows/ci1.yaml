name: React.js CI

on:
  # Déclenche le workflow sur les poussées vers la branche main
  push:
    branches:
      - main

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

      - name: Build
        run: npm run build

      # CORRECTION: Remplacement des deux étapes Sonar par une seule action officielle.
      # Cela conserve la logique "analyser après le build" mais utilise une action maintenue.
      - name: Analyze Frontend with SonarCloud
        uses: SonarSource/sonar-scanner-cli-action@v3.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # projectBaseDir n'est pas nécessaire car le working-directory est déjà défini par défaut
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FRONTEND }} # Important: utilisez une clé de projet spécifique pour le frontend
            -Dsonar.sources=src/
            -Dsonar.verbose=true
        
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

      # CORRECTION: Remplacement des deux étapes Sonar par une seule action officielle.
      # C'est le changement clé qui résout l'erreur de cache.
      - name: Analyze Backend with SonarCloud
        uses: SonarSource/sonar-scanner-cli-action@v3.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BACKEND }} # Important: utilisez une clé de projet spécifique pour le backend
            -Dsonar.sources=.
            -Dsonar.verbose=true
          
  frontend-security:
    needs: frontend-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    steps:
      - uses: actions/checkout@v4

      # CORRECTION: Remplacement de @v4 par une version spécifique pour la stabilité
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@0.4.0
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Install Snyk CLI
        uses: snyk/actions/setup@0.4.0 # Version stable
        with:
          version: latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  
         
      - name: Snyk Authenticate    
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Test
        run: snyk code test --all-projects
        continue-on-error: true

  backend-security:
    needs: backend-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4

      # CORRECTION: Remplacement de @v4 par une version spécifique pour la stabilité
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@0.4.0
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
         
      - name: Install Snyk CLI
        uses: snyk/actions/setup@0.4.0 # Version stable
        with:
          version: latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Snyk Authenticate    
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Test
        run: snyk code test --all-projects
        continue-on-error: true
