name: DAST Scan avec Nginx Reverse Proxy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  dast-scan:
    runs-on: ubuntu-latest
    name: Lancer, Exposer avec Nginx/ngrok et Scanner

    steps:
      # Étape 1 : Cloner le projet.
      - name: 1. Cloner le code du projet
        uses: actions/checkout@v4

      # Étape 2 : Lancer les conteneurs.
      - name: 2. Construire et lancer les services avec Docker Compose
        run: |
          echo "Construction des images et démarrage de la pile applicative..."
          # La commande est lancée à la racine du projet cloné.
          docker compose up --build -d

      # Étape 3 : Attendre Nginx, avec affichage des logs en cas d'échec.
      - name: 3. Attendre que Nginx soit prêt (avec débogage )
        run: |
          echo "Attente du démarrage du reverse proxy Nginx sur le port 80..."
          # Boucle de vérification robuste.
          if ! timeout 120s bash -c 'until curl -sf http://localhost:80 > /dev/null; do echo "En attente de Nginx..."; docker compose ps; sleep 5; done'; then
            echo "ERREUR: Nginx n'a pas démarré à temps."
            echo "--- AFFICHAGE DES LOGS DU CONTENEUR NGINX ---"
            docker compose logs nginx
            exit 1
          fi
          echo "Nginx est prêt !"

      # Étape 4 : Lancer ngrok.
      - name: 4. Installer et lancer ngrok
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz | sudo tar xvz -C /usr/local/bin
          ngrok config add-authtoken $NGROK_AUTHTOKEN
          ngrok http 80 --log=stdout > ngrok.log &
          sleep 5

      # Étape 5 : Récupérer l'URL publique pour le scan.
      - name: 5. Afficher l'URL publique et la définir pour le scan
        id: scan
        run: |
          PUBLIC_URL=$(grep -o 'url=https://[0-9a-zA-Z.-]*\.ngrok-free\.app' ngrok.log | cut -d'=' -f2 )
          echo "################################################"
          echo "## L'application est accessible à l'adresse suivante :"
          echo "## $PUBLIC_URL"
          echo "################################################"
          echo "public_url=$PUBLIC_URL" >> $GITHUB_OUTPUT

      # Étape 6 : Lancer le scan DAST.
      - name: 6. Lancer le scan de sécurité DAST (OWASP ZAP)
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: ${{ steps.scan.outputs.public_url }}
          
      # Étape 7 : Arrêter tous les services.
      - name: 7. Arrêter tous les services
        if: always()
        run: |
          echo "Arrêt des conteneurs Docker..."
          docker compose down
          echo "Arrêt de l'agent ngrok..."
          pkill ngrok || true
