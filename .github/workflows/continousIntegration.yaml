name: React.js CI + Semgrep

on:
  pull_request: {}
  push:
    branches:
    
      - "master"

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

      - name: Build
        run: npm run build

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

  semgrep-scan-frontend:
    needs: frontend-test
    name: Semgrep Analysis (quiz-app only)
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    defaults:
      run:
        working-directory: ./quiz-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep scan (with JSON report)
        run: semgrep scan --config auto . --json --output semgrep-report-frontend.json

      - name: Upload Semgrep JSON report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-json-frontend-report
          path: ./quiz-app/semgrep-report-frontend.json

  gitleaks-scan-frontend:
    needs: frontend-test
    name: Gitleaks Analysis (quiz-app only)
    runs-on: ubuntu-latest
    container:
      image: zricethezav/gitleaks:latest  # Docker image officielle de Gitleaks
    defaults:
      run:
        working-directory: ./quiz-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Mark GitHub workspace as safe
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
  
      - name: Run Gitleaks scan on kubernetes-manifest
        run: gitleaks detect --source . --no-git --verbose --report-format json --report-path gitleaks-report-frontend.json
        continue-on-error: true
  
      - name: Upload Gitleaks JSON report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-json-frontend-report
          path: ./quiz-app/gitleaks-report-frontend.json
    
  dependency-check-frontend:
    needs: frontend-test # S'exécute après les tests du frontend
    name: OWASP Dependency-Check (quiz-app)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'quiz-app/package-lock.json'

      - name: Install dependencies for analysis
        working-directory: ./quiz-app
        run: npm install

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'quiz-app-frontend'
          path: './quiz-app'
          format: 'HTML'
          out: 'reports-frontend'
          args: >
            --scan .
            --enableExperimental
          

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dep-check-frontend-report
          path: reports-frontend
        
  ######
  semgrep-scan-backend:
    needs: backend-test
    name: Semgrep Analysis 
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep scan 
        run: semgrep scan --config auto . --json --output semgrep-report-backend.json

      - name: Upload Semgrep JSON report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-json-report
          path: ./backend/semgrep-report-backend.json

  gitleaks-scan-backend:
    needs: backend-test
    name: Gitleaks Analysis 
    runs-on: ubuntu-latest
    container:
      image: zricethezav/gitleaks:latest  # Docker image officielle de Gitleaks
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Mark GitHub workspace as safe
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
  
      - name: Run Gitleaks scan on kubernetes-manifest
        run: gitleaks detect --source . --no-git --verbose --report-format json --report-path gitleaks-report-backend.json
  
        continue-on-error: true
  
      - name: Upload Gitleaks JSON report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-json-report
          path: ./backend/gitleaks-report-backend.json
  
  dependency-check-backend:
    needs: backend-test # S'exécute après les tests du backend
    name: OWASP Dependency-Check (backend)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies for analysis
        working-directory: ./backend
        run: npm install

      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'quiz-app-backend'
          path: './backend'
          format: 'HTML'
          out: 'reports-backend'
          args: >
            --scan .
            --enableExperimental
         

      - name: Upload Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dep-check-backend-report
          path: reports-backend

  k8s-manifest-scan:
    needs: [semgrep-scan-frontend,gitleaks-scan-frontend,dependency-check-frontend,semgrep-scan-backend,gitleaks-scan-backend,dependency-check-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Checkov scan (JSON report)
        uses: bridgecrewio/checkov-action@master   
        with:
          directory: ./kubernetes-manifest
          framework: kubernetes
          output_format: json
          output_file_path: ./checkov-report.json
          quiet: true
        continue-on-error: true

      - name: Upload Checkov JSON report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: ./checkov-report.json

      - name: Run Kubescape scan (JSON report)
        uses: kubescape/github-action@main   
        with:
          files: "kubernetes-manifest/*.yaml"
          format: json
          outputFile: ./kubescape-report.json
        continue-on-error: true


      - name: Upload Kubescape JSON report
        uses: actions/upload-artifact@v4
        with:
          name: kubescape-report
          path: ./kubescape-report.json
  
