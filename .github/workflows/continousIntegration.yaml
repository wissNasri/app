name: React.js CI + Semgrep

on:
  pull_request: {}
  push:
    branches:
      - "main"

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./quiz-app
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

      - name: Build
        run: npm run build

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]
    steps:
      - name: Check-out git repository  
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install project dependencies 
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true 

  semgrep-scan:
    name: Semgrep Analysis (quiz-app only)
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    defaults:
      run:
        working-directory: ./quiz-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep scan (with JSON report)
        run: semgrep scan --config auto . --json > semgrep-report.json

      - name: Upload Semgrep JSON report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-json-report
          path: ./quiz-app/semgrep-report.json

  gitleaks-scan:
    name: Gitleaks Analysis (quiz-app only)
    runs-on: ubuntu-latest
    container:
      image: zricethezav/gitleaks:latest  # Docker image officielle de Gitleaks
    defaults:
      run:
        working-directory: ./quiz-app
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Mark GitHub workspace as safe
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Run Gitleaks scan on quiz-app
        run: gitleaks detect --source . --verbose
        continue-on-error: true
