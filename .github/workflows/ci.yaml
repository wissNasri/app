name: Analyse de Sécurité MERN Frontend (pipeline complète)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  scan-frontend:
    name: Analyse du Frontend (React.js)
    runs-on: self-hosted

    steps:
      # ==================================================
      # 1. Checkout & setup
      # ==================================================
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: quiz-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('quiz-app/package-lock.json') }}

      - name: Installer les dépendances du frontend
        run: npm install
        working-directory: quiz-app

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Créer le dossier de rapports
        run: mkdir -p quiz-app/reports/{trivy,owasp,gitleaks,semgrep,checkov,kubescape}

      - name: Setup Gitleaks
        run: |
          if [ ! -f gitleaks ]; then
            wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz
            tar -xzf gitleaks_8.18.2_linux_x64.tar.gz
            chmod +x gitleaks
          fi

      # ==================================================
      # 2. Build Docker
      # ==================================================
      - name: Build Docker image for frontend
        run: docker build --cache-from quiz-app-frontend:latest -t quiz-app-frontend:latest quiz-app

      # ==================================================
      # 3. Analyses de vulnérabilités
      # ==================================================

      # --- Trivy SARIF ---
      - name: Run Trivy Scan (SARIF)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'quiz-app-frontend:latest'
          format: 'sarif'
          output: 'quiz-app/reports/trivy/trivy-report.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/trivy/trivy-report.sarif
          category: trivy

      # --- OWASP Dependency-Check SARIF ---
      - name: Run OWASP Dependency-Check (SARIF)
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "frontend-quiz-app"
          path: "quiz-app"
          format: "SARIF"
          out: "quiz-app/reports/owasp"
          args: "--enableRetired"
        env:
          JAVA_HOME: /opt/jdk

      - name: Upload OWASP SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/owasp/dependency-check-report.sarif
          category: owasp

      # --- Gitleaks SARIF ---
      - name: Run Gitleaks (SARIF)
        run: |
          ./gitleaks detect --source="quiz-app" \
            --report-path="quiz-app/reports/gitleaks/gitleaks-report.sarif" \
            --report-format="sarif" \
            --exit-code 0

      - name: Upload Gitleaks SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/gitleaks/gitleaks-report.sarif
          category: gitleaks

      # --- Semgrep SARIF ---
      - name: Run Semgrep (SARIF)
        run: |
          pip install semgrep
          semgrep scan --config "p/default" \
            --output "quiz-app/reports/semgrep/semgrep-report.sarif" \
            --sarif || true

      - name: Upload Semgrep SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/semgrep/semgrep-report.sarif
          category: semgrep

      # ==================================================
      # 4. Analyse Kubernetes
      # ==================================================

      # --- Checkov SARIF ---
      - name: Run Checkov SARIF
        run: checkov -d ./kubernetes-manifest -o sarif > quiz-app/reports/checkov/checkov-report.sarif
        continue-on-error: true

      - name: Upload Checkov SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/checkov/checkov-report.sarif
          category: checkov

      # --- Kubescape SARIF ---
      - name: Run Kubescape SARIF
        uses: kubescape/github-action@main
        with:
          format: 'sarif'
          outputFile: 'quiz-app/reports/kubescape/kubescape-report.sarif'
          scanPath: ./kubernetes-manifest
        continue-on-error: true

      - name: Upload Kubescape SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/kubescape/kubescape-report.sarif
          category: kubescape
