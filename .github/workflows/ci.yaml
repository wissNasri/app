# Nom du fichier : .github/workflows/frontend-ci-without-sarif.yml

name: Frontend CI without SARIF Reporting

on: [push]


jobs:
  frontend-validation-without-sarif:
    name: "Frontend Validation (Logs & Artifacts)"
    runs-on: ubuntu-latest
    # Pas besoin de permissions spéciales ici

    defaults:
      run:
        working-directory: ./quiz-app

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4

    
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: "Install Dependencies & Run Tests"
        run: |
          npm install
          npm run lint
          npm test

      # --- Alternative 1 : Sortie standard ---
      - name: "Run Semgrep (SAST) and Output to Logs"
        uses: returntocorp/semgrep-action@v1
        with:
          source-root: frontend/
          # Par défaut, Semgrep affiche les résultats dans les logs et fait échouer le job

      # --- Alternative 2 : Rapport HTML en tant qu'artefact ---
      - name: "Run OWASP Dependency-Check (SCA) and Generate HTML Report"
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'frontend'
          path: './'
          format: 'HTML' # On génère un rapport lisible par un humain

      - name: "Upload OWASP-DC HTML Report as Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-report
          path: frontend/reports/dependency-check-report.html

      # --- Alternative 3 : Tableau dans les logs ---
      - name: "Build Docker Image"
        run: docker build -t frontend-test-build .

      - name: "Run Trivy Scan and Output as Table"
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'frontend-test-build'
          format: 'table' # Affiche un tableau clair directement dans les logs du pipeline
          severity: 'CRITICAL,HIGH'
