name: Comprehensive Pre-Deployment CI

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write

jobs:
  # ... (jobs frontend-test et backend-test inchangés) ...
  frontend-test:
    name: 1. Frontend - Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies, lint, and test
        working-directory: ./quiz-app
        run: |
          npm ci
          npm run lint
          npm test
      - name: Build application
        working-directory: ./quiz-app
        run: npm run build

  backend-test:
    name: 1. Backend - Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies, lint, and test
        working-directory: ./backend
        run: |
          npm ci
          npm run lint
          npm test

  security-scan:
    name: 2. Security - Code & Dependency Scans
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan for leaked secrets (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          # CORRECTION: Dit à Gitleaks de ne pas faire échouer le job.
          # Il générera toujours un rapport SARIF et un avertissement.
          GITLEAKS_EXIT_CODE: "0"

      - name: Static Application Security Testing (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          # On génère le fichier SARIF pour l'uploader manuellement plus tard
          # afin de le combiner avec les autres rapports.
          generateSarif: true 

      - name: Dependency Vulnerability Scan - Backend (OWASP)
        run: |
          docker run --rm -v $(pwd)/backend:/src owasp/dependency-check --project "Backend" --scan /src --format "ALL" --out /src/reports
        continue-on-error: true

      - name: Dependency Vulnerability Scan - Frontend (OWASP)
        run: |
          docker run --rm -v $(pwd)/quiz-app:/src owasp/dependency-check --project "Frontend" --scan /src --format "ALL" --out /src/reports
        continue-on-error: true

      - name: Upload all SARIF files to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Gitleaks génère automatiquement `gitleaks-report.sarif`
          # Semgrep génère `semgrep.sarif`
          sarif_file: |
            gitleaks-report.sarif
            semgrep.sarif
      
      - name: Archive OWASP reports
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-reports
          path: |
            backend/reports/
            quiz-app/reports/

  # ... (le reste des jobs frontend-image, backend-image, iac-scan reste inchangé) ...
  frontend-image:
    name: 3. Frontend - Build & Scan Image
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      - id: build-image
        run: |
          docker build -t frontend-image:local -f quiz-app/Dockerfile .
          echo "image_name=frontend-image:local" >> $GITHUB_OUTPUT
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build-image.outputs.image_name }}
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-frontend-results.sarif'

  backend-image:
    name: 3. Backend - Build & Scan Image
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      - id: build-image
        run: |
          docker build -t backend-image:local -f backend/Dockerfile .
          echo "image_name=backend-image:local" >> $GITHUB_OUTPUT
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build-image.outputs.image_name }}
          format: 'sarif'
          output: 'trivy-backend-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-backend-results.sarif'

  iac-scan:
    name: 4. IaC - Scan Kubernetes & Terraform
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/checkout@v4
      - uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: all
          output_format: sarif
          output_file_path: checkov-results.sarif
          quiet: true
          soft_fail: true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'checkov-results.sarif'
