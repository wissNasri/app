# Nom du workflow, reflétant l'ajout de l'analyse SAST.
name: 3 - SAST Analysis

on: [push]

jobs:
  frontend-sast-check:
    name: Frontend Security Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      # Étape 1 : Récupérer le code.
      - name: 1. Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Étape 2 : Scanner les secrets.
      - name: 2. Run Gitleaks Scan
        uses: gitleaks/gitleaks-action@v2

      # --- SECTION CORRIGÉE ---
      # Étape 3 : Configurer l'environnement Node.js.
      - name: 3. Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Étape 4 : Installer les dépendances et exécuter les tests.
      # C'est maintenant une étape séparée qui utilise 'run'.
      - name: 4. Install Dependencies & Run Tests
        run: |
          npm install
          npm run lint
          npm test
        working-directory: ./quiz-app
        env:
          CI: true

      # Étape 5 : Analyser le code source avec Semgrep (SAST).
      - name: 5. Run Semgrep SAST Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/default'
        working-directory: ./quiz-app
