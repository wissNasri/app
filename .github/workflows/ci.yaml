name: Analyse de Sécurité MERN Frontend (pipeline complète)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  scan-frontend:
    name: Analyse du Frontend (React.js)
    runs-on: self-hosted

    steps:
      # ==================================================
      # 1. Checkout & setup
      # ==================================================
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: quiz-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('quiz-app/package-lock.json') }}

      - name: Installer les dépendances du frontend
        run: npm install
        working-directory: quiz-app

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Créer le dossier de rapports
        run: mkdir -p quiz-app/reports/{trivy,owasp,gitleaks,semgrep,checkov,kubescape}

      - name: Setup Gitleaks
        run: |
          if [ ! -f gitleaks ]; then
            wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz
            tar -xzf gitleaks_8.18.2_linux_x64.tar.gz
            chmod +x gitleaks
          fi

      # ==================================================
      # 2. Build Docker
      # ==================================================
            # --- Checkov JSON + SARIF ---
      - name: Run Checkov JSON
        run: checkov -d ./kubernetes-manifest -o json > quiz-app/reports/checkov/checkov-report.json
        continue-on-error: true
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'


      - name: Convert Checkov JSON to SARIF (optional)
        run: python scripts/convert_checkov_json_to_sarif.py \
          quiz-app/reports/checkov/checkov-report.json \
          quiz-app/reports/checkov/checkov-report.sarif

      - name: Validate Checkov SARIF
        run: jq empty quiz-app/reports/checkov/checkov-report.sarif || echo "Checkov SARIF may be invalid"

      - name: Upload Checkov SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: quiz-app/reports/checkov/checkov-report.sarif
          category: checkov

      - name: Upload Checkov JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report-json
          path: quiz-app/reports/checkov/checkov-report.json



          

   
