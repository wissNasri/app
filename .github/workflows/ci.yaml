# Nom du fichier : .github/workflows/professional-ci-pipeline.yml

name: Professional CI Pipeline with SARIF Reporting

# --- DÉCLENCHEUR CORRIGÉ POUR LA BRANCHE 'main' ---
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-and-validation:
    name: "Security Validation and Build"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write

    steps:
      - name: "1. Checkout Code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      

      - name: "3. Scan IaC with Checkov"
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./

      - name: "4. Scan K8s Manifests with Kubescape"
        uses: kubescape/github-action@main
        with:
          format: 'sarif'
          outputFile: 'kubescape-results.sarif'
          severityThreshold: 'critical'

      - name: "5. Upload Kubescape SARIF"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'kubescape-results.sarif'

      - name: "6. Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: "7. Install Dependencies & Run Tests"
        working-directory: ./quiz-app
        run: |
          npm install
          npm run lint
          npm test

      - name: "8. Run Semgrep (SAST)"
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/default'

      - name: "9. Upload Semgrep SARIF"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

      - name: "10. Run OWASP Dependency-Check (SCA)"
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'quiz-app'
          path: 'quiz-app/'
          format: 'SARIF'
          failOnCVSS: 7

      - name: "11. Upload OWASP-DC SARIF"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'quiz-app/reports/dependency-check-report.sarif'

      - name: "12. Build Docker Image"
        working-directory: ./quiz-app
        run: docker build -t frontend-test-build .

      - name: "13. Run Trivy Scan"
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'frontend-test-build'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
          exit-code: '1'

      - name: "14. Upload Trivy SARIF"
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
