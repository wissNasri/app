name: Analyse de Sécurité MERN Frontend (avec échec sur vulnérabilité critique)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  scan-frontend:
    name: Analyse du Frontend (React.js)
    runs-on: self-hosted

    steps:
      # --------------------------------------------------
      - name: Checkout du code
        uses: actions/checkout@v4

      # --------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # --------------------------------------------------
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: quiz-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('quiz-app/package-lock.json') }}

      # --------------------------------------------------
      - name: Installer les dépendances du frontend
        run: npm install
        working-directory: quiz-app

      # --------------------------------------------------
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      # --------------------------------------------------
      - name: Créer le dossier de rapports
        run: mkdir -p quiz-app/reports

      # --------------------------------------------------
      - name: Setup Gitleaks
        run: |
          if [ ! -f gitleaks ]; then
            wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz
            tar -xzf gitleaks_8.18.2_linux_x64.tar.gz
            chmod +x gitleaks
          fi

      # --------------------------------------------------
      - name: Run Gitleaks
        run: ./gitleaks detect \
            --verbose \
            --source="quiz-app" \
            --exit-code 0 \
            --report-format json \
            --report-path "quiz-app/reports/gitleaks-report.json" || true

      # --------------------------------------------------
      - name: Run Semgrep
        run: |
          pip install semgrep
          semgrep scan --config "p/default" \
            --output "quiz-app/reports/semgrep-report.json" \
            --json || true
      # --------------------------------------------------
      - name: Lancer l'analyse des dépendances du frontend (OWASP)
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: "frontend-quiz-app"
          path: "quiz-app"
          format: "JSON"
          out: "quiz-app/reports"
          args: >
            --enableRetired
        env:
          JAVA_HOME: /opt/jdk

      # --------------------------------------------------
      - name: Build Docker image for frontend
        run: docker build --cache-from quiz-app-frontend:latest -t quiz-app-frontend:latest quiz-app

      # --------------------------------------------------
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'quiz-app-frontend:latest'
          format: 'json'
          output: 'quiz-app/reports/trivy-report.json'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # --------------------------------------------------
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./kubernetes-manifest
          output_format: json,cli
          output_file_path: quiz-app/reports/checkov-report.json,console
        continue-on-error: true

      # --------------------------------------------------
      # Upload des rapports
      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-frontend-report
          path: quiz-app/reports/gitleaks-report.json
          if-no-files-found: warn

      - name: Upload Semgrep report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-frontend-report
          path: quiz-app/reports/semgrep-report.json
          if-no-files-found: warn

      - name: Upload OWASP report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-frontend-report
          path: quiz-app/reports/dependency-check-report.json
          if-no-files-found: warn

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-frontend-report
          path: quiz-app/reports/trivy-report.json
          if-no-files-found: warn

      - name: Upload Checkov report
        uses: actions/upload-artifact@v4
        with:
          name: checkov-frontend-report
          path: quiz-app/reports/checkov-report.json
          if-no-files-found: warn
