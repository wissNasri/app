name: Analyse de Sécurité MERN Frontend (pipeline complète)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:

jobs:
  scan-frontend:
    name: Analyse du Frontend (React.js)
    runs-on: self-hosted

    steps:
      # ==================================================
      # 1. ÉTAPES DE PRÉPARATION
      # ==================================================
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: quiz-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('quiz-app/package-lock.json') }}

      - name: Installer les dépendances du frontend
        run: npm install
        working-directory: quiz-app

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - name: Créer le dossier de rapports
        run: mkdir -p quiz-app/reports/{trivy,owasp,gitleaks,semgrep,checkov,kubescape}

      - name: Setup Gitleaks
        run: |
          if [ ! -f gitleaks ]; then
            wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz
            tar -xzf gitleaks_8.18.2_linux_x64.tar.gz
            chmod +x gitleaks
          fi
          

      # ==================================================
      # 2. BUILD DOCKER
      # ==================================================
      - name: Build Docker image for frontend
        run: docker build --cache-from quiz-app-frontend:latest -t quiz-app-frontend:latest quiz-app

      # ==================================================
      # 3. ANALYSE DES VULNÉRABILITÉS
      # ==================================================

      # --- Trivy Scan (console) ---
      - name: Run Trivy Scan (console)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'quiz-app-frontend:latest'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
          ignore-unfixed: true
      
      # --- Trivy JSON report ---
      - name: Generate Trivy JSON report
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'quiz-app-frontend:latest'
          format: 'json'
          output: 'quiz-app/reports/trivy/trivy-report.json'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
          exit-code: '0'
          ignore-unfixed: true


      # --- Gitleaks ---
      - name: Run Gitleaks (scan de secrets)
        run: |
          ./gitleaks detect --source="quiz-app" --report-path="quiz-app/reports/gitleaks/gitleaks-report.json" --report-format="json" --exit-code 0

      # --- Semgrep ---
      - name: Run Semgrep (analyse statique)
        run: |
          pip install semgrep
          semgrep scan --config "p/default" --output "quiz-app/reports/semgrep/semgrep-report.json" --json || true

      # --- OWASP Dependency-Check ---
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: "frontend-quiz-app"
          path: "quiz-app"
          format: "ALL"
          out: "quiz-app/reports/owasp"
          args: >
            --enableRetired
        env:
          JAVA_HOME: /opt/jdk

      # ==================================================
      # 4. ANALYSE DES MANIFESTES KUBERNETES
      # ==================================================

      # --- Checkov ---
      - name: Run Checkov JSON
        run: checkov -d ./kubernetes-manifest -o json > quiz-app/reports/checkov/checkov-report.json

        continue-on-error: true


      - name: Run Checkov Console
        run: checkov -d ./kubernetes-manifest
        continue-on-error: true

      # --- Kubescape ---
      - name: Run Kubescape
        uses: kubescape/github-action@main
        with:
          format: 'pretty,json'
          outputFile: 'quiz-app/reports/kubescape/kubescape-report.json'
          scanPath: ./kubernetes-manifest
        continue-on-error: true

      # ==================================================
      # 5. UPLOAD DE TOUS LES RAPPORTS
      # ==================================================
      - name: Upload Trivy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-frontend-report
          path: quiz-app/reports/trivy/trivy-report.json
          if-no-files-found: warn

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-frontend-report
          path: quiz-app/reports/gitleaks/gitleaks-report.json
          if-no-files-found: warn

      - name: Upload Semgrep report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-frontend-report
          path: quiz-app/reports/semgrep/semgrep-report.json
          if-no-files-found: warn

      - name: Upload OWASP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-frontend-report
          path: quiz-app/reports/owasp/dependency-check-report.json
          if-no-files-found: warn

      - name: Upload Checkov report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkov-frontend-report
          path: quiz-app/reports/checkov/checkov-report.json
          if-no-files-found: warn

      - name: Upload Kubescape report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kubescape-frontend-report
          path: quiz-app/reports/kubescape/kubescape-report.json
          if-no-files-found: warn
